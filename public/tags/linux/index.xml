<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 徒然のままに</title>
    <link>http://localhost:1313/tags/linux/</link>
    <description>Recent content in Linux on 徒然のままに</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 23 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git clone</title>
      <link>http://localhost:1313/posts/git-clone/</link>
      <pubDate>Thu, 23 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/git-clone/</guid>
      <description>GitHubでリポジトリのZIPファイルをPCにダウンロードした場合、それは単なるスナップショット（特定の時点のファイル群）であり、Gitの履歴情報やリモートとの連携情報が失われています。したがって、ダウンロードしたZIPファイルから直接Gitリポジトリとして連携させることはできません。&#xA;この場合、「Gitリポジトリをダウンロード」ではなく、「Gitリポジトリをクローン」するというアプローチを取る必要があります。クローンすることで、Gitの全ての履歴とリモートへの参照が設定された状態でローカルにリポジトリが作成されます。&#xA;しかし、もしどうしてもZIPファイルでダウンロードしたファイル群から作業を始めたいのであれば、以下の手順でリモートリポジトリと連携させることができます。&#xA;シナリオ1: GitHubリポジトリをまだクローンしていない場合 (推奨アプローチ) これが最も推奨される方法です。ZIPファイルをダウンロードして作業するのではなく、最初からgit cloneを使用します。&#xA;ZIPファイルを削除する（または別の場所に移動する）: ZIPファイルでダウンロードしたディレクトリは不要になります。&#xA;GitHubリポジトリのURLを取得する: GitHubのリポジトリページに行き、「Code」ボタンをクリックして、HTTPSまたはSSHのURLをコピーします。&#xA;HTTPS: https://github.com/your-username/your-repo.git SSH: git@github.com:your-username/your-repo.git (SSHキーを設定済みの場合) コマンドラインでリポジトリをクローンする: 作業したいディレクトリに移動し、以下のコマンドを実行します。&#xA;git clone &amp;lt;リポジトリのURL&amp;gt; 例:&#xA;git clone https://github.com/techentrelab/hugo.git これにより、hugo という名前のディレクトリが作成され、その中にリポジトリの全てのファイルとGitの履歴、そしてoriginという名前のリモート設定が自動的に行われます。&#xA;作成されたディレクトリに移動して作業を開始する:&#xA;cd hugo これで、ローカルリポジトリがリモートのGitHubリポジトリと完全に連携された状態になります。git pull や git push がすぐに利用可能です。&#xA;シナリオ2: ZIPファイルでダウンロードしたファイル群から作業を始めたい場合 (非推奨だが、手順は以下) この方法は、Gitの履歴をすべて破棄し、新しいリポジトリとして「再出発」するような形になります。既存のリモートリポジトリにコミットをプッシュしたい場合は、さらに複雑な手順が必要になる場合があります。&#xA;前提: ZIPファイルを展開したディレクトリ（例: hugo）があり、その中にリポジトリのファイル群が入っているとします。&#xA;展開したディレクトリに移動する:&#xA;cd /path/to/your/unzipped/hugo 新しいGitリポジトリを初期化する: これにより、現在のディレクトリが新しいGitリポジトリとして認識されます。&#xA;git init 全てのファイルをステージングする: ダウンロードしたファイル群を、新しいリポジトリの最初のコミットとして準備します。&#xA;git add . 最初のコミットを作成する:&#xA;git commit -m &amp;#34;Initial commit from downloaded zip&amp;#34; GitHubリポジトリのURLを取得する: シナリオ1と同じように、GitHubのリポジトリページからURLをコピーします。&#xA;リモートリポジトリを追加する: origin という名前でGitHubリポジトリのURLを追加します。</description>
    </item>
    <item>
      <title>Fcitxの自動起動</title>
      <link>http://localhost:1313/posts/fcitx%E3%81%AE%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95/</link>
      <pubDate>Tue, 21 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/fcitx%E3%81%AE%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95/</guid>
      <description>Lubuntuのデスクトップ環境（LXQt）でFcitxの自動起動を設定する方法はいくつかあります。最も確実で推奨される方法をいくつかご紹介します。&#xA;1. LXQtの自動起動設定（推奨） LubuntuのLXQt環境には、アプリケーションの自動起動を管理するためのGUIツールがあります。&#xA;スタートメニューを開く: 画面左下のメニューアイコンをクリックします。 設定を開く: 「設定」または「Preferences」を選択します。 LXQt設定センターを開く: 「LXQt 設定センター」または「LXQt Settings Center」を選択します。 自動起動を選択: 左側のリストから「自動起動」または「Autostart」を選択します。 「追加」をクリック: 右上の「追加」ボタンをクリックします。 Fcitxのコマンドを入力: 名前 (Name): Fcitx （わかりやすい名前） コマンド (Command): fcitx -d （または fcitx のみでも動作することが多いですが、-d はデーモンとして起動するオプションです。） 説明 (Description): Fcitx Input Method （オプション） 「OK」をクリックして追加し、設定センターを閉じます。 これで次回ログイン時にFcitxが自動的に起動するはずです。&#xA;2. .desktopファイルを直接配置する もしGUIツールが見つからない、または使いたくない場合は、手動で .desktop ファイルを作成して配置することもできます。&#xA;ファイルマネージャーを開く: 「PCManFM-Qt」などのファイルマネージャーを開きます。&#xA;ホームディレクトリに移動: 自分のホームディレクトリ (/home/your_username/) に移動します。&#xA;隠しファイルを表示: Ctrl + H を押すか、メニューから「表示」→「隠しファイルを表示」を選択して、隠しファイルを表示させます。&#xA;~/.config/autostart/ ディレクトリに移動: このディレクトリがなければ作成してください。 mkdir -p ~/.config/autostart/&#xA;新しいファイルを作成: fcitx.desktop という名前の新しいファイルを作成し、以下の内容を貼り付けます。&#xA;[Desktop Entry] Type=Application Name=Fcitx Comment=Fcitx Input Method Exec=fcitx -d Icon=fcitx Terminal=false Categories=System; StartupNotify=false ファイルを保存します。</description>
    </item>
    <item>
      <title>Lubuntu  日本語入力</title>
      <link>http://localhost:1313/posts/lubuntu--%E6%97%A5%E6%9C%AC%E8%AA%9E%E5%85%A5%E5%8A%9B/</link>
      <pubDate>Mon, 20 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/lubuntu--%E6%97%A5%E6%9C%AC%E8%AA%9E%E5%85%A5%E5%8A%9B/</guid>
      <description> Lubuntu 日本語入力のセットアップガイド 日本語入力エンジン「Mozc」の導入 まず、日本語入力に必要な「fcitx-mozc」をインストールします。&#xA;システムを更新し、fcitx-mozcをインストールします。&#xA;sudo apt update sudo apt install fcitx-mozc 再ログイン後、設定を確認します。 ログアウトして再度ログインし、「入力メソッドの設定」を開いてください。以下の項目が表示されていれば、インストールは成功です。&#xA;キーボード - 日本語 Mozc </description>
    </item>
    <item>
      <title>~/.profileと ~/.xprofile</title>
      <link>http://localhost:1313/posts/profile%E3%81%A8xprofile/</link>
      <pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/profile%E3%81%A8xprofile/</guid>
      <description>~/.profile と ~/.xprofile は、ユーザーのホームディレクトリ内にあるファイルなので、絶対パスは以下のようになります。&#xA;~/.profile: /home/ユーザー名/.profile ~/.xprofile: /home/ユーザー名/.xprofile ここで、「ユーザー名」はあなたのユーザー名に置き換えてください。</description>
    </item>
  </channel>
</rss>
