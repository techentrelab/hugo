<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on 徒然のままに</title>
    <link>http://localhost:1313/tags/git/</link>
    <description>Recent content in Git on 徒然のままに</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 30 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub</title>
      <link>http://localhost:1313/posts/github/</link>
      <pubDate>Thu, 30 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/github/</guid>
      <description>&lt;p&gt;GitHubのプラン変更は、通常、GitHubのウェブサイト上から簡単に行うことができます。&lt;/p&gt;&#xA;&lt;p&gt;プランを変更する手順は、主に以下の通りです。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-組織または個人の設定ページへアクセスする&#34;&gt;1. 組織または個人の設定ページへアクセスする&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;GitHubにサインインします。&lt;/li&gt;&#xA;&lt;li&gt;画面右上のプロフィール写真をクリックします。&lt;/li&gt;&#xA;&lt;li&gt;プランを変更したいアカウントの種類に応じて、以下のいずれかを選択します。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;個人アカウントの場合:&lt;/strong&gt; &lt;strong&gt;「Settings（設定）」&lt;/strong&gt; を選択します。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;組織アカウント（会社などのチームで利用している場合）の場合:&lt;/strong&gt; &lt;strong&gt;「Your organizations（あなたの組織）」&lt;/strong&gt; から該当の組織を選択し、&lt;strong&gt;「Settings（設定）」&lt;/strong&gt; を選択します。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;2-billing支払い設定へ移動する&#34;&gt;2. Billing（支払い）設定へ移動する&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;設定画面のサイドバーで**「Billing and plans（請求とプラン）」** または &lt;strong&gt;「Billing &amp;amp; plans」&lt;/strong&gt; といった請求関連の項目を探し、クリックします。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;3-プランを変更する&#34;&gt;3. プランを変更する&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;現在のプランが表示されているセクションで、&lt;strong&gt;「Edit plan（プランの編集）」&lt;/strong&gt; や &lt;strong&gt;「Upgrade（アップグレード）」&lt;/strong&gt;、&lt;strong&gt;「Downgrade（ダウングレード）」&lt;/strong&gt; といったボタンを探し、クリックします。&lt;/li&gt;&#xA;&lt;li&gt;希望するプラン（例：Free、Team、Enterprise）を選択し、画面の指示に従って変更を確定します。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;アップグレード（例：FreeからTeamへ）&lt;/strong&gt; の場合は、チームのメンバー数や支払い情報を確認・入力します。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ダウングレード（例：TeamからFreeへ）&lt;/strong&gt; の場合は、機能制限に関する警告が表示されることがありますので、内容を確認してから進めてください。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;注意点&#34;&gt;&lt;img src=&#34;https://fonts.gstatic.com/s/e/notoemoji/16.0/1f6a8/72.png&#34; alt=&#34;🚨&#34;&gt; 注意点&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;組織アカウントの場合:&lt;/strong&gt; プラン変更ができるのは、通常、&lt;strong&gt;組織のオーナー（Owner）&lt;/strong&gt; または &lt;strong&gt;管理者（Billing Manager）&lt;/strong&gt; 権限を持つユーザーのみです。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ダウングレード:&lt;/strong&gt; プランをダウングレードすると、それまで利用できていた高度な機能（必須レビュー、プライベートリポジトリの容量など）が利用できなくなる場合があります。変更前に、現在のプランで利用している機能が新しいプランでも提供されるか確認が必要です。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;具体的な操作はGitHubのインターフェースの更新によって変わる可能性があるため、迷われた際は&lt;a href=&#34;https://docs.github.com/ja&#34;&gt;GitHubの公式ドキュメント&lt;/a&gt;を参照いただくのが確実です。&lt;/p&gt;&#xA;&lt;p&gt;お仕事でGitHub（ギットハブ）を利用される場合、&lt;strong&gt;有料プランを検討する必要がある&lt;/strong&gt;ことが多いです。&lt;/p&gt;&#xA;&lt;p&gt;GitHubには&lt;strong&gt;無料プラン (Free)&lt;/strong&gt; がありますが、チームでの開発をより円滑に進めるための高度な機能や、大規模な組織での利用に適した機能は&lt;strong&gt;有料プラン (TeamやEnterprise)&lt;/strong&gt; で提供されています。&lt;/p&gt;&#xA;&lt;p&gt;主なプランとその特徴は以下の通りです:&lt;/p&gt;&#xA;&lt;h3 id=&#34;githubの主な有料プラン&#34;&gt;&lt;img src=&#34;https://fonts.gstatic.com/s/e/notoemoji/16.0/1f4b0/72.png&#34; alt=&#34;💰&#34;&gt; GitHubの主な有料プラン&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitHub Teamプラン&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;料金の目安:&lt;/strong&gt; ユーザーあたり &lt;strong&gt;月額 $4&lt;/strong&gt; 程度（年払い割引あり）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;特徴:&lt;/strong&gt; Freeプランの機能に加え、&lt;strong&gt;必須レビュー&lt;/strong&gt;や&lt;strong&gt;コードオーナー&lt;/strong&gt;といったチームでの&lt;strong&gt;高度な共同作業機能&lt;/strong&gt;が追加されます。中小規模のチーム向けです。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitHub Enterpriseプラン&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;料金の目安:&lt;/strong&gt; ユーザーあたり &lt;strong&gt;月額 $21&lt;/strong&gt; 程度（年間ライセンス契約）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;特徴:&lt;/strong&gt; Teamプランの機能に加え、&lt;strong&gt;大規模組織向け&lt;/strong&gt;のセキュリティ、スケーラビリティ、&lt;strong&gt;一元的なID管理 (Enterprise Managed Users)&lt;/strong&gt;、詳細な&lt;strong&gt;監査ログAPI&lt;/strong&gt;などが強化されています。エンタープライズ級のサポートも利用可能です。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;無料プラン-free-でできること&#34;&gt;&lt;img src=&#34;https://fonts.gstatic.com/s/e/notoemoji/16.0/2728/72.png&#34; alt=&#34;✨&#34;&gt; 無料プラン (Free) でできること&lt;/h3&gt;&#xA;&lt;p&gt;個人開発や小規模なプロジェクトであれば、無料プランでも以下の機能が利用できます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>git clone</title>
      <link>http://localhost:1313/posts/git-clone/</link>
      <pubDate>Thu, 23 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/git-clone/</guid>
      <description>&lt;p&gt;GitHubでリポジトリのZIPファイルをPCにダウンロードした場合、それは単なるスナップショット（特定の時点のファイル群）であり、Gitの履歴情報やリモートとの連携情報が失われています。したがって、ダウンロードしたZIPファイルから直接Gitリポジトリとして連携させることはできません。&lt;/p&gt;&#xA;&lt;p&gt;この場合、&lt;strong&gt;「Gitリポジトリをダウンロード」ではなく、「Gitリポジトリをクローン」する&lt;/strong&gt;というアプローチを取る必要があります。クローンすることで、Gitの全ての履歴とリモートへの参照が設定された状態でローカルにリポジトリが作成されます。&lt;/p&gt;&#xA;&lt;p&gt;しかし、もし&lt;strong&gt;どうしてもZIPファイルでダウンロードしたファイル群から作業を始めたい&lt;/strong&gt;のであれば、以下の手順でリモートリポジトリと連携させることができます。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;シナリオ1-githubリポジトリをまだクローンしていない場合-推奨アプローチ&#34;&gt;シナリオ1: GitHubリポジトリをまだクローンしていない場合 (推奨アプローチ)&lt;/h3&gt;&#xA;&lt;p&gt;これが最も推奨される方法です。ZIPファイルをダウンロードして作業するのではなく、最初から&lt;code&gt;git clone&lt;/code&gt;を使用します。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;ZIPファイルを削除する（または別の場所に移動する）:&lt;/strong&gt; ZIPファイルでダウンロードしたディレクトリは不要になります。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;GitHubリポジトリのURLを取得する:&lt;/strong&gt;&#xA;GitHubのリポジトリページに行き、「Code」ボタンをクリックして、HTTPSまたはSSHのURLをコピーします。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTPS:&lt;/strong&gt; &lt;code&gt;https://github.com/your-username/your-repo.git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SSH:&lt;/strong&gt; &lt;code&gt;git@github.com:your-username/your-repo.git&lt;/code&gt; (SSHキーを設定済みの場合)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;コマンドラインでリポジトリをクローンする:&lt;/strong&gt;&#xA;作業したいディレクトリに移動し、以下のコマンドを実行します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone &amp;lt;リポジトリのURL&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;例:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/techentrelab/hugo.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これにより、&lt;code&gt;hugo&lt;/code&gt; という名前のディレクトリが作成され、その中にリポジトリの全てのファイルとGitの履歴、そして&lt;code&gt;origin&lt;/code&gt;という名前のリモート設定が自動的に行われます。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;作成されたディレクトリに移動して作業を開始する:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;これで、ローカルリポジトリがリモートのGitHubリポジトリと完全に連携された状態になります。&lt;code&gt;git pull&lt;/code&gt; や &lt;code&gt;git push&lt;/code&gt; がすぐに利用可能です。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;シナリオ2-zipファイルでダウンロードしたファイル群から作業を始めたい場合-非推奨だが手順は以下&#34;&gt;シナリオ2: ZIPファイルでダウンロードしたファイル群から作業を始めたい場合 (非推奨だが、手順は以下)&lt;/h3&gt;&#xA;&lt;p&gt;この方法は、Gitの履歴をすべて破棄し、新しいリポジトリとして「再出発」するような形になります。既存のリモートリポジトリにコミットをプッシュしたい場合は、さらに複雑な手順が必要になる場合があります。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;前提:&lt;/strong&gt; ZIPファイルを展開したディレクトリ（例: &lt;code&gt;hugo&lt;/code&gt;）があり、その中にリポジトリのファイル群が入っているとします。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;展開したディレクトリに移動する:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /path/to/your/unzipped/hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;新しいGitリポジトリを初期化する:&lt;/strong&gt;&#xA;これにより、現在のディレクトリが新しいGitリポジトリとして認識されます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;全てのファイルをステージングする:&lt;/strong&gt;&#xA;ダウンロードしたファイル群を、新しいリポジトリの最初のコミットとして準備します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;最初のコミットを作成する:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Initial commit from downloaded zip&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;GitHubリポジトリのURLを取得する:&lt;/strong&gt;&#xA;シナリオ1と同じように、GitHubのリポジトリページからURLをコピーします。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitpod</title>
      <link>http://localhost:1313/posts/gitpod/</link>
      <pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/gitpod/</guid>
      <description>&lt;h3 id=&#34;ona-formerly-gitpod&#34;&gt;Ona (formerly Gitpod)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ona.com/&#34;&gt;https://ona.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Gitpodの料金プランは、利用するユーザーのタイプや利用時間によって異なります。主に以下の3つのプランがあります。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Free (無料プラン):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;個人利用向けで、毎月50時間の利用時間が提供されます。&lt;/li&gt;&#xA;&lt;li&gt;パブリックリポジトリやプライベートリポジトリで利用可能です。&lt;/li&gt;&#xA;&lt;li&gt;基本的な機能はすべて利用できます。&lt;/li&gt;&#xA;&lt;li&gt;小規模なプロジェクトやGitpodを試してみたい場合に最適です。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Standard (標準プラン):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;月額$9で、毎月500時間の利用時間が提供されます。&lt;/li&gt;&#xA;&lt;li&gt;無料プランの機能に加えて、より多くの利用時間が必要な個人開発者やフリーランス向けです。&lt;/li&gt;&#xA;&lt;li&gt;（2023年9月時点の情報であり、料金や時間は変更される可能性があります）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Teams &amp;amp; Enterprise (チーム＆エンタープライズプラン):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大規模なチームや企業向けのカスタムプランです。&lt;/li&gt;&#xA;&lt;li&gt;無制限の利用時間、専用サポート、シングルサインオン（SSO）、セルフホスティングオプションなど、高度な機能が提供されます。&lt;/li&gt;&#xA;&lt;li&gt;具体的な料金は、Gitpodの営業チームに問い合わせて見積もりを取る形になります。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;これらのプランは、Gitpodの公式サイトで詳細を確認できます。時期によってプラン内容や料金が変更されることもあるので、最新の情報は公式サイトで確認することをおすすめします。&lt;/p&gt;&#xA;&lt;p&gt;Gitpodは、クラウドベースの統合開発環境（IDE）を提供するサービスです。コードを開発するために必要な環境を、ブラウザ上で瞬時に起動できます。&lt;/p&gt;&#xA;&lt;p&gt;主な特徴は以下の通りです。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;瞬時の開発環境起動:&lt;/strong&gt; GitHub、GitLab、Bitbucketなどのリポジトリから、わずか数秒で完全に機能する開発環境を起動できます。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ブラウザベースのIDE:&lt;/strong&gt; ローカルに何もインストールすることなく、ブラウザ上でVS CodeベースのIDEを利用できます。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dockerfileによる環境定義:&lt;/strong&gt; プロジェクトごとに必要なツールや依存関係をDockerfileで定義でき、開発環境の一貫性を保てます。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;共同開発:&lt;/strong&gt; 開発環境を簡単に共有し、チームメンバーと共同で作業できます。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;自動化:&lt;/strong&gt; 継続的インテグレーション/継続的デリバリー（CI/CD）パイプラインと統合し、開発ワークフローを自動化できます。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;様々な言語とフレームワークのサポート:&lt;/strong&gt; 多くのプログラミング言語やフレームワークに対応しています。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Gitpodを利用することで、開発者は環境構築の手間から解放され、すぐにコードを書き始めることができます。特に、新しいプロジェクトに参加する際や、異なる環境で作業する必要がある場合に非常に便利です。&lt;/p&gt;&#xA;&lt;p&gt;例えば、GitHubのリポジトリのURLの前に&lt;code&gt;gitpod.io/#&lt;/code&gt;を付けるだけで、そのリポジトリのGitpod環境を起動できます。&lt;/p&gt;&#xA;&lt;p&gt;Gitpodのロゴは以下のようなものです。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
